*  Traccia
Si vuole implementare un'applicazione che  permetta di memorizzare
informazioni relative a conti bancari.

Nello specifico si vuole implementare una gerarchia di classi:
- ~ContoBancario~: per memorizzare le informazioni relative ad un
  conto bancario semplice. Ogni volta che si preleva o si deposita una
  somma si deve notificare l'operazione al correntista (per dopo,
  salvare in un "file" di log tutte le operazioni).
    
- ~ContoConFido~: per memorizzare le informazioni relative ad un
  conto bancario con fido. In particolare si vuole tenere traccia di
  quando un utente va in rosso e soprattutto dell'ammontare della
  cifra. 
  
- - ~BancarArray~: per memorizzare le informazioni relative ad un a
  collezione
  di correntisti, quindi conti bancari

- ~Cliente~: per memorizzare le informazioni anagrafiche di un
  cliente della banca. Ad ogni correntista Ã¨ associato un conto
  corrente (di qualsiasi tipologia).
  Un correntista puo contenere piu
  conti corrente.

** Specifiche: BancaArray (rappresenta una filiale)
*** Attributi
- indirizzo: String
- nomeFiliale: String
- codiceFiliale: String
- contiCorrente: ContoCorrente[]
- correntisti: Cliente[] //potrebbe contenere clienti con un cc chiuso
*** Interfaccia
- cambiare tipologia conto al correntista
- void aprireConto(Cliente c)
  Aggiunge un conto corrente.
- void chiudiConto(String codiceIban)
  Cerca all'interno di contiCorrente il conto con iban specificato in
  ingresso e lo elimina
- Cliente getCorrentista(String codiceConto)
- ContoCorrente[] getConti(String codiceCliente)

** Specifiche: Cliente
*** Attributi
- nome: String
- cognome: String
- indirizzo: String
- telefono: String
- email: String
- dataDiNascita: String
- codiceCliente: String
- codiceFiscale: String
  
*** Interfaccia

** Interfaccia ContoBancario
*** Attributi
- codiceIban: String
- bilancio: double
- correntista: Cliente
*** Interfaccia
       - boolean preleva(double)
       - void deposita(double)
       - void notifica()
         
** Interfaccia ContoConFido (extends ContoBancario)
*** Attributi
- fido: double
- rosso: double
*** Interfaccia
- preleva/deposita (overriding)
- void aumentaFido(double) 


*  Opzioni di Scelta
** Rappresentazione Relazione tra ContoBancario e Cliente.
Un Cliente puo avere piu conti corrente, ma un contocorrente ha
solo un intestatario.

1. ContoBancario memorizza il riferimento la Cliente (*)
   - In ContoBancario inseriamo il riferimento al Cliente 

2. Il Cliente memorizza il riferimento al proprio ContoBancario
   (>1)
   - In Cliente inseriamo tra gli attributi un array di ContoBancario


